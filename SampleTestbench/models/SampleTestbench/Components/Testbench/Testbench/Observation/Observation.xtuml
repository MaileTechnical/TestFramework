-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	'Observation',
	3,
	'Observation',
	'The supertype for those classes which, when invoked, will measure some change in the application under test.
Invocation of a subtype is implemented through polymorphic event dispatch.

In general an observation will report on, or evaluate against some criteria, some returned value from the application.
An observation may fail if it does not satisfy the presented criteria within a time limit, if specified.

A observation may be polling or triggered:
If polling, and an interval is specified, the evaluation will be repeated periodically; again, the time limit applies.
If triggered, an evaluation may be caused at any time by the testbench, when deemed appropriate.
To do this, the testbench should signal an "assess" with a key value matching that of the observation.

If an observation fails to succeed, the test case is deemed to have failed; all un-executed stimuli and observations are cancelled.

An observation subtype must include an instance-based state model.
This state model must accept or ignore both Observe_pvt and Delete_pvt events.
The first should result in an evaluation which should signal completion with or without success.
The second may delete the observation sub/supertype instances.
',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("527542f0-7d74-416b-983d-b76f99218773",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	'AppendPolling',
	'Add an instance of Observation sub/supertype pair following the specified stimulus.
A polling observation may be re-evaluated at specified intervals.
An overall time limit for such re-evaluation may also be specified.
Failure to signal success within the time limit is considered a time-out failure.
Any observation failure terminates the entire test case.
Note: 
 if both poll interval and time limit are zero, the observation will be invoked once only;
 this invocation may occur before all events at this time instance have been processed;
 the ordering of simultaneous event processing may affect success or failure.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'send self.assigned_obs_id = TESTSEQ::AppendObservation( stimulusId:param.stimulus, 
                                                   pollInterval:param.pollInterval, 
                                                   pollDuration:param.timeLimit, 
                                                   eventKey:"");',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TPARM
	VALUES ("dfa700ac-b47c-4f99-8224-117b4c98c183",
	"527542f0-7d74-416b-983d-b76f99218773",
	'stimulus',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("228abcf7-fa6e-4acd-ab53-ca8e04804f96",
	"527542f0-7d74-416b-983d-b76f99218773",
	'timeLimit',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"df67f725-27b7-4c70-a527-3aa565621c02",
	'');
INSERT INTO O_TPARM
	VALUES ("df67f725-27b7-4c70-a527-3aa565621c02",
	"527542f0-7d74-416b-983d-b76f99218773",
	'pollInterval',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"dfa700ac-b47c-4f99-8224-117b4c98c183",
	'');
INSERT INTO O_TFR
	VALUES ("78c3a00f-458f-4cc2-8442-9ee9f9f1e8ae",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	'Observe',
	'This operation will be invoked when the counterpart instance is encountered by the sequencing service.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'generate Observation1:Observe_pvt to self;',
	1,
	'',
	"4c4b8bf2-c846-4500-be44-cba9f8a692a1",
	0);
INSERT INTO O_TFR
	VALUES ("8cde1dec-2329-4da3-aee2-c64388b3ab1f",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	'Complete',
	'Respond to the sequencing service with success or failure of the observation subtype.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'send TESTSEQ::ObservationDone( observationId:self.assigned_obs_id, success:param.success );',
	1,
	'',
	"78c3a00f-458f-4cc2-8442-9ee9f9f1e8ae",
	0);
INSERT INTO O_TPARM
	VALUES ("ac218b63-6ace-4cbc-b15b-39ea7d9ee50c",
	"8cde1dec-2329-4da3-aee2-c64388b3ab1f",
	'success',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("4c4b8bf2-c846-4500-be44-cba9f8a692a1",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	'AppendTriggered',
	'Add an instance of Observation sub/supertype pair following the specified stimulus.
A triggered observation will be re-evaluated whenever its key value matches that of a assess signal.
An overall time limit for such re-evaluation may be specified.
Failure to signal success within the time limit is considered a time-out failure.
Any observation failure terminates the entire test case.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'send self.assigned_obs_id = TESTSEQ::AppendObservation( stimulusId:param.stimulus, 
                                                   pollInterval:0, 
                                                   pollDuration:param.timeLimit, 
                                                   eventKey:param.key );',
	1,
	'',
	"527542f0-7d74-416b-983d-b76f99218773",
	0);
INSERT INTO O_TPARM
	VALUES ("45dfa026-ed4e-4ce0-982c-20a0bd30a637",
	"4c4b8bf2-c846-4500-be44-cba9f8a692a1",
	'stimulus',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("5a5c2cd1-4f52-4172-9653-11cccf9174a3",
	"4c4b8bf2-c846-4500-be44-cba9f8a692a1",
	'timeLimit',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"fe07e476-42fe-4401-aa3e-900a1715cfec",
	'');
INSERT INTO O_TPARM
	VALUES ("fe07e476-42fe-4401-aa3e-900a1715cfec",
	"4c4b8bf2-c846-4500-be44-cba9f8a692a1",
	'key',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"45dfa026-ed4e-4ce0-982c-20a0bd30a637",
	'');
INSERT INTO O_TFR
	VALUES ("6b771a1c-9b3f-4b4e-b185-ca2ca020c608",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	'ReadIntervalTimer',
	'Request the value of the interval timer associated with the stimulus sequence this observation  belongs to.',
	"ba5eda7a-def5-0000-0000-000000000002",
	1,
	'send interval = TESTSEQ::ReadIntervalTimer( observationId:self.assigned_obs_id, reset:param.reset );
return interval;',
	1,
	'',
	"8cde1dec-2329-4da3-aee2-c64388b3ab1f",
	0);
INSERT INTO O_TPARM
	VALUES ("ae7efe3b-1aaa-4458-9e40-5dd813c0735b",
	"6b771a1c-9b3f-4b4e-b185-ca2ca020c608",
	'reset',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("308f1cb8-db16-4f08-970b-cca3af131aa3",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	'Delete',
	'Dispose of the client instances when the test sequence service no longer needs them.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'generate Observation2:Delete_pvt to self;',
	1,
	'',
	"6b771a1c-9b3f-4b4e-b185-ca2ca020c608",
	0);
INSERT INTO O_NBATTR
	VALUES ("07ddd6ae-bab1-4a06-82d3-e0ef9c3807d6",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790");
INSERT INTO O_BATTR
	VALUES ("07ddd6ae-bab1-4a06-82d3-e0ef9c3807d6",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790");
INSERT INTO O_ATTR
	VALUES ("07ddd6ae-bab1-4a06-82d3-e0ef9c3807d6",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	"00000000-0000-0000-0000-000000000000",
	'assigned_obs_id',
	'An identifier returned by the Test sequencer service.
Used to identify an instance when being invoked by the Test sequencer.',
	'',
	'assigned_obs_id',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("9b005f42-cd21-43b7-b7fa-154e076435b7",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790");
INSERT INTO O_BATTR
	VALUES ("9b005f42-cd21-43b7-b7fa-154e076435b7",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790");
INSERT INTO O_ATTR
	VALUES ("9b005f42-cd21-43b7-b7fa-154e076435b7",
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	"07ddd6ae-bab1-4a06-82d3-e0ef9c3807d6",
	'current_state',
	'',
	'',
	'current_state',
	0,
	"ba5eda7a-def5-0000-0000-000000000006",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790");
INSERT INTO O_ID
	VALUES (1,
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790");
INSERT INTO O_ID
	VALUES (2,
	"a9f6ad1f-e59c-4787-b577-e4e2201f7790");
INSERT INTO PE_PE
	VALUES ("a9f6ad1f-e59c-4787-b577-e4e2201f7790",
	1,
	"c8211b48-8bfc-4132-8bde-d1324c67d3ff",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("c8211b48-8bfc-4132-8bde-d1324c67d3ff",
	"00000000-0000-0000-0000-000000000000",
	"f1d52077-c56d-42f9-a782-ae875ac97594",
	'Testbench',
	'',
	0,
	'../Testbench.xtuml');
