-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'Observation',
	105,
	'Observation',
	'Observations are sequenced after a stimulus - sequentially and/or concurrently.
As a stimulus executes its sequence, observations become ''current'' - primed for evaluation.
At some point then, an observation is prompted to evaluate (observe).
Evaluation attempts to match expected conditions and reports success or failure.

Some observations poll repeatedly under control of timers - polling interval and timeout.
Some are one-shot observations triggered by some occurrence - typically from a port activity.
Some may allow multiple triggering - this requires the use of a guard (timeout) timer. 

',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("99f3a05c-edfd-49a4-8f70-160c84f5a3e7",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'StartDurationLimitTimer',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// If configured, initialize and start the timer which limits duration of this observation.

select one timeout related by self->CountdownTimer[R125.''is stopped by''];
if (not  empty timeout )
  select one subtype related by self->ImmediateObservation[R127];
  if ( subtype.isDelay )  // a delay merely completes; it never ''observes''.
    create event instance delayed of Observation2:Completed() to self;
    timeout.triggered_event = delayed; 
  else
    create event instance timesup of Observation4:TimedOut() to self;
    timeout.triggered_event = timesup;
  end if;
  timeout.Start();
end if;',
	1,
	'',
	"37e0520a-d625-42ae-af71-e0ed81aa52c2",
	0);
INSERT INTO O_TFR
	VALUES ("d64d9272-c56d-4ae7-aa7f-78f5202f2b7f",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'CancelTimers',
	'// Cancel any associated timers; note: they may be retained for error analysis.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// If configured, stop timers running.

select one ptmr related by self->ImmediateObservation[R127]->CountdownTimer[R126.''is polled by''];
if ( not_empty ptmr )
  ptmr.Cancel();
end if;
select one dtmr related by self->CountdownTimer[R125.''is stopped by''];
if ( not_empty dtmr )
  dtmr.Cancel();
end if;
',
	1,
	'',
	"a0ac75b4-7713-4a89-b89a-2954d6e781ff",
	0);
INSERT INTO O_TFR
	VALUES ("a0ac75b4-7713-4a89-b89a-2954d6e781ff",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'ReportedDone',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( param.success == True )
  generate Observation2:Completed to self;
else
  LOG::LogFailure( message:"SEQ Observation FAILED" );
  generate Observation3:Failed to self;
end if;',
	1,
	'',
	"99f3a05c-edfd-49a4-8f70-160c84f5a3e7",
	0);
INSERT INTO O_TPARM
	VALUES ("67147451-c4cd-4968-aadb-65c3cc37009c",
	"a0ac75b4-7713-4a89-b89a-2954d6e781ff",
	'success',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("48396ca3-ee3c-4bd3-a3bb-2d4da66fa619",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'Add',
	'Add an observation to the sequence of observations that should evaluate following stimulus injection.
A stimulus may have zero or more observations for evaluation in sequence.
Each observation is given an opportunity to evaluate, and must succeed before proceeding to the next.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Add an observation to the last stimulus added to a sequence.
// It may be added in sequence or concurrently with other observations.

select any ts from instances of TestSuite;
select one tc related by ts->TestBucket[R118.''is running'']->TestCase[R129.''is building''];
select any seq related by tc->StimulusSequence[R119.''executes'']
  where ( selected.seqLabel == param.seqLabel );
if ( empty seq )
  LOG::LogFailure( message:"No sequence matches " + param.seqLabel );
  return;
end if;

select one first_stimulus related by seq->Stimulus[R104.''will first inject''];
if ( empty first_stimulus ) 
  LOG::LogFailure( message:"No stimulus exists on sequence " + param.seqLabel );
  return;
end if;

// Point cursor at last stimulus in sequence for this test case.
cursor = first_stimulus;
while ( True )
  select one next related by cursor->Stimulus[R102.''follows''];
  if ( empty next )
    break;
  else
    cursor = next;
  end if;
end while;

select any observation related by cursor->Observation[R105.''will trigger''];
if ( empty observation )
  cursor.observations = 1;
else
  if ( not param.concurrent )
    cursor.observations = cursor.observations + 1;
  end if;
end if;
self.assignedID = param.observationId;
self.sequence_number = cursor.observations;
self.status = observationStatus::created;

if ( param.durationLimit > 0 )
  create object instance timeout of CountdownTimer;
  timeout.duration = param.durationLimit;
  timeout.scale_factor = seq.timeScaleFactor;
  relate timeout to self across R125.''timesout'';
end if;
select one polltimer related by self->ImmediateObservation[R127]->CountdownTimer[R126.''is polled by''];
if ( not_empty polltimer )
  polltimer.scale_factor = seq.timeScaleFactor;
end if;
relate self to cursor across R105.''is made after'';',
	1,
	'',
	"3411cdd6-af11-4830-9206-1a2dc2aa08f7",
	0);
INSERT INTO O_TPARM
	VALUES ("5cd1928e-f46d-4919-aee6-2bfb9590acbe",
	"48396ca3-ee3c-4bd3-a3bb-2d4da66fa619",
	'durationLimit',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"ed94511a-1ba5-41fa-af71-bf810cc45f5c",
	'For a polling ( repeated until success/failure ) obsevation, the time after which failure is declared.');
INSERT INTO O_TPARM
	VALUES ("4d06e5c5-3364-404d-9364-b3340967640d",
	"48396ca3-ee3c-4bd3-a3bb-2d4da66fa619",
	'seqLabel',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'Identifies the stimulus, after injection of which, this observation should be sequentially evaluated.');
INSERT INTO O_TPARM
	VALUES ("ed94511a-1ba5-41fa-af71-bf810cc45f5c",
	"48396ca3-ee3c-4bd3-a3bb-2d4da66fa619",
	'observationId',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"4d06e5c5-3364-404d-9364-b3340967640d",
	'Assigned by the client; used to initiate appropriate client evaluation when observation comes due.');
INSERT INTO O_TPARM
	VALUES ("be671862-f1ad-4106-8f60-181a44963c8b",
	"48396ca3-ee3c-4bd3-a3bb-2d4da66fa619",
	'concurrent',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"5cd1928e-f46d-4919-aee6-2bfb9590acbe",
	'If true, this observation  will share the same sequence number as the previous observation.
Observations sharing a sequence number will run concurrently when triggered after a stimulus.');
INSERT INTO O_TFR
	VALUES ("3411cdd6-af11-4830-9206-1a2dc2aa08f7",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'ReadIntervalTimer',
	'Access the interval timer belonging to the stimulus sequence that triggered this observation.
Optionally, reset the timer value to zero after reading: see reset paramater.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Calculate, scale, and signal the interval time since measurement was started.

select one seq related by self->Stimulus[R115.''is currently observing for'']
                              ->StimulusSequence[R116.''is active for''];
interval = ( TIM::current_clock() - seq.IntervalTimerStartTime ) / seq.timeScaleFactor;
if ( param.reset )
  seq.IntervalTimerStartTime = TIM::current_clock();
end if;
send TESTBENCH::IntervalTimerValue( key:param.key, value:interval );',
	1,
	'',
	"d64d9272-c56d-4ae7-aa7f-78f5202f2b7f",
	0);
INSERT INTO O_TPARM
	VALUES ("6ad5b0b1-6d02-41f7-899b-df41524719e0",
	"3411cdd6-af11-4830-9206-1a2dc2aa08f7",
	'reset',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"aff24c3b-2781-4843-9117-5f243468d35b",
	'If set to true, the timer value will reset to zero after being read.');
INSERT INTO O_TPARM
	VALUES ("aff24c3b-2781-4843-9117-5f243468d35b",
	"3411cdd6-af11-4830-9206-1a2dc2aa08f7",
	'key',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'A supplied string key which can be recognized by the client receiving the returned value.');
INSERT INTO O_TFR
	VALUES ("47df170d-7e82-485c-a2ec-b2936e92e9fb",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'Delete',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Signal deletion to the client.
// then, delete subtype and/or timers before self-deletion.

if ( not self.isDelay() )  // A delay ''observation'' has no client counterpart.
  send TESTBENCH::DeleteObservation( observationId:self.assignedID );
end if;

select one timeout related by self->CountdownTimer[R125.''is stopped by''];
if ( not_empty timeout )
  unrelate self from timeout across R125.''is stopped by'';
  generate CountdownTimer2:kill() to timeout;
end if;
select one triggered related by self->TriggeredObservation[R127];
if ( not_empty triggered )
  unrelate self from triggered across R127;
  delete object instance triggered;
else;
  select one subtype related by self->ImmediateObservation[R127];
  select one retry related by subtype->CountdownTimer[R126.''is polled by''];
  if ( not_empty retry )
    unrelate subtype from retry across R126.''is polled by'';
    generate CountdownTimer2:kill() to retry;
  end if;
  unrelate self from subtype across R127;
  delete object instance subtype;
end if;
delete object instance self;',
	1,
	'',
	"48396ca3-ee3c-4bd3-a3bb-2d4da66fa619",
	0);
INSERT INTO O_TFR
	VALUES ("37e0520a-d625-42ae-af71-e0ed81aa52c2",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'Activate',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one trigger related by self->TriggeredObservation[R127];
if ( empty trigger )
  generate Observation1:Observe() to self;
else
  generate Observation6:Stage() to self;	
end if;	',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("54a3364c-77eb-4637-bd14-bcf9c0d5e3f9",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	'isDelay',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'result = false;
select one subtype related by self->ImmediateObservation[R127];
if ( not_empty subtype )
  result = subtype.isDelay;
end if;
return result;',
	1,
	'',
	"47df170d-7e82-485c-a2ec-b2936e92e9fb",
	0);
INSERT INTO O_NBATTR
	VALUES ("24be76cd-6e25-43bb-ad99-9b1b9098100a",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_BATTR
	VALUES ("24be76cd-6e25-43bb-ad99-9b1b9098100a",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_ATTR
	VALUES ("24be76cd-6e25-43bb-ad99-9b1b9098100a",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	"461e232d-e064-4ec7-991a-9ab6353d0a53",
	'status',
	'Tracks the status of the observation through creation to completion/failure.',
	'',
	'status',
	0,
	"8dbc5f97-fc0a-492e-a0da-e7c134178780",
	'',
	'');
INSERT INTO S_DT_PROXY
	VALUES ("8dbc5f97-fc0a-492e-a0da-e7c134178780",
	"00000000-0000-0000-0000-000000000000",
	'observationStatus',
	'Status values associated with the lifecycles of various instances.',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_NBATTR
	VALUES ("461e232d-e064-4ec7-991a-9ab6353d0a53",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_BATTR
	VALUES ("461e232d-e064-4ec7-991a-9ab6353d0a53",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_ATTR
	VALUES ("461e232d-e064-4ec7-991a-9ab6353d0a53",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	"0590bf3e-aa12-4afe-99e1-e6823fdf25bc",
	'sequence_number',
	'Observations are numbered, starting at 1, on an observation sequence attached to a stimulus.
Multiple observations following a given stimulus will be run by order of sequence number.
Multiple observations sharing the same sequence number will run concurrently.
Numberings are also used in identifying/reporting failure points.',
	'',
	'sequence_number',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("4a8a5f21-7138-4baf-921d-a90344dfae52",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_BATTR
	VALUES ("4a8a5f21-7138-4baf-921d-a90344dfae52",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_ATTR
	VALUES ("4a8a5f21-7138-4baf-921d-a90344dfae52",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	"0d9b7552-284c-4a1c-8967-ed45d6eaa77c",
	'current_state',
	'',
	'',
	'current_state',
	0,
	"ba5eda7a-def5-0000-0000-000000000006",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("0590bf3e-aa12-4afe-99e1-e6823fdf25bc",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_BATTR
	VALUES ("0590bf3e-aa12-4afe-99e1-e6823fdf25bc",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_ATTR
	VALUES ("0590bf3e-aa12-4afe-99e1-e6823fdf25bc",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	"00000000-0000-0000-0000-000000000000",
	'assignedID',
	'A supplied value which identifies the counterpart entity in the test client.
Note: this would ideally be marked as an identifier - but that causes editor parse errors.',
	'',
	'assignedID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("0d9b7552-284c-4a1c-8967-ed45d6eaa77c",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_BATTR
	VALUES ("0d9b7552-284c-4a1c-8967-ed45d6eaa77c",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_ATTR
	VALUES ("0d9b7552-284c-4a1c-8967-ed45d6eaa77c",
	"575e1db4-0e95-46f9-afaa-e41935d0b11f",
	"24be76cd-6e25-43bb-ad99-9b1b9098100a",
	'timeScaleFactor',
	'Value for scaling from microsecond base timer to units selected for duration timing.',
	'',
	'timeScaleFactor',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_ID
	VALUES (1,
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO O_ID
	VALUES (2,
	"575e1db4-0e95-46f9-afaa-e41935d0b11f");
INSERT INTO PE_PE
	VALUES ("575e1db4-0e95-46f9-afaa-e41935d0b11f",
	1,
	"9688d51a-0c78-4f2b-b5c4-8da421246f13",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("9688d51a-0c78-4f2b-b5c4-8da421246f13",
	"00000000-0000-0000-0000-000000000000",
	"b06a8228-7533-46d6-b644-27cf49555288",
	'TestSequencer',
	'',
	0,
	'../TestSequencer.xtuml');
